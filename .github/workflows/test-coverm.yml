name: Test CoverM with Pixi
on: [push, pull_request]

jobs:
  pixi_test_dependencies_locked:
    name: Pixi test_dependencies_locked (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Pixi
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Show environment info
        run: |
          pixi run -e dev --frozen pixi info
          pixi run -e dev --frozen pixi list

      - name: Run tests with Pixi
        run: |
          pixi run -e dev --frozen cargo test

  # Run after removing lock file so dependences are unlocked
  pixi_test_dependencies_optimistic:
    name: Pixi test_dependencies_optimistic (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Pixi
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Remove lock file
        run: |
          rm -fv pixi.lock

      - name: Create dev environment
        run: |
          pixi run -e dev pixi info

      - name: Show environment info
        run: |
          pixi run -e dev pixi list

      - name: Run tests with Pixi
        run: |
          pixi run -e dev cargo test

  # OSX tests
  pixi_test_dependencies_locked_osx:
    name: Pixi test_dependencies_locked (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.8"] # Must use 3.8 so that minimap2 installs
    steps:
      - uses: actions/checkout@v3

      - name: Install Pixi
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Show environment info
        run: |
          pixi run -e dev --frozen pixi info
          pixi run -e dev --frozen pixi list

      - name: Run tests with Pixi
        run: |
          pixi run -e dev --frozen cargo test -- --skip bwa_mem2 --skip strobealign

  # Run after removing lock file so dependences are unlocked
  pixi_test_dependencies_optimistic_osx:
    name: Pixi test_dependencies_optimistic (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.8"] # Must use 3.8 so that minimap2 installs
    steps:
      - uses: actions/checkout@v3

      - name: Install Pixi
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Remove lock file
        run: |
          rm -fv pixi.lock

      - name: Create dev environment
        run: |
          pixi run -e dev pixi info

      - name: Show environment info
        run: |
          pixi run -e dev pixi list

      - name: Run tests with Pixi
        run: |
          pixi run -e dev cargo test -- --skip bwa_mem2 --skip strobealign
